throttle(.72)

v_num_drops = 6  # Increased number of drops
create_array(v_x, v_num_drops)
create_array(v_y, v_num_drops)
create_array(v_speed, v_num_drops)
create_array(v_length, v_num_drops)
create_array(v_head_y, v_num_drops)  # Track head position separately

# Initialize variables
v_i = 0
v_j = 0
v_pos_y = 0
v_bright = 0
# Initialize drops
v_i = 0
while v_i < v_num_drops then
    v_x[v_i] = random(0, 63, 0)
    v_y[v_i] = 0  # Start at top
    v_head_y[v_i] = 0
    v_speed[v_i] = random(2, 4, 0)  # Increased speed range
    v_length[v_i] = random(4, 8, 0)  # Shorter trails for faster movement
    v_i = v_i + 1
endwhile

# Main loop
while true then
    rest(.01)
    
    v_i = 0
    begin_frame(true)
    while v_i < v_num_drops then
        # Clear old position with dark green (instead of full clear)
        v_j = 0
        while v_j < v_length[v_i] then
            v_pos_y = v_head_y[v_i] - v_j
            if v_pos_y >= 0 then
                if v_pos_y < 64 then
                    plot(v_x[v_i], v_pos_y, green:1)
                endif
            endif
            v_j = v_j + 1
        endwhile
        
        # Update head position
        v_head_y[v_i] = v_head_y[v_i] + v_speed[v_i]
        
        # Draw new trail
        v_j = 0
        while v_j < v_length[v_i] then
            v_pos_y = v_head_y[v_i] - v_j
            if v_pos_y >= 0 then
                if v_pos_y < 64 then
                    # Head of trail is brightest
                    if v_j == 0 then
                        plot(v_x[v_i], v_pos_y, green:99)
                    else
                        # Trail gets dimmer
                        v_bright = 80 - (v_j * 10)
                        if v_bright < 20 then
                            v_bright = 20
                        endif
                        plot(v_x[v_i], v_pos_y, green:{v_bright}, random(4000, 15000, 0))
                    endif
                endif
            endif
            v_j = v_j + 1
        endwhile
        
        # Reset if off screen, but stagger the drops
        if v_head_y[v_i] - v_length[v_i] > 63 then
            v_x[v_i] = random(0, 63, 0)
            v_head_y[v_i] = random(-20, 0, 0)  # Stagger reentry
            v_speed[v_i] = random(2, 4, 0)
            v_length[v_i] = random(4, 8, 0)
        endif
        
        v_i = v_i + 1
    endwhile
    end_frame
    
endwhile