# Ocean Wave Animation
# Set up wave parameters
v_wave_height = 45      # Base wave height (moved lower on screen)
v_amplitude = 8        # Reduced amplitude for gentler waves
v_frequency = 0.15     # Adjusted frequency for smoother waves
v_speed = 0.08        # Slowed down the speed
v_frame_count = 0      # Frame counter

# Main animation loop
while true then
    begin_frame
    clear()
    
    # Draw the deep ocean base (always filled)
    draw_rectangle(0, 50, 64, 14, ocean_blue:90, true, 100)
    
    # Create the main wave layers
    for v_x in (0, 63, 1) then
        # Calculate three wave positions with different phases
        v_wave1 = v_wave_height + (v_amplitude * sin(v_x * v_frequency + v_frame_count * v_speed))
        v_wave2 = v_wave_height + (v_amplitude * sin(v_x * v_frequency + v_frame_count * v_speed + 2))
        v_wave3 = v_wave_height + (v_amplitude * sin(v_x * v_frequency + v_frame_count * v_speed + 4))
        
        # Draw waves from bottom to top
        # Bottom wave (deep water)
        draw_rectangle(v_x, v_wave1, 1, 64 - v_wave1, ocean_blue:80, true, 100)
        
        # Middle wave (slightly lighter)
        draw_rectangle(v_x, v_wave2 - 3, 1, 6, azure:70, true, 100)
        
        # Top wave (lightest)
        draw_rectangle(v_x, v_wave3 - 6, 1, 4, sky_blue:60, true, 100)
    endfor v_x
    
    # Add foam/sparkle effects at wave peaks
    for v_x in (0, 63, 2) then
        v_foam_y = v_wave_height + (v_amplitude * sin(v_x * v_frequency + v_frame_count * v_speed))
        plot(v_x, v_foam_y - 6, white:40, 100)
    endfor v_x

    end_frame
    
    # Control animation speed
    rest(0.04)
    
    # Update frame counter
    v_frame_count = v_frame_count + 1

    # Reset frame counter to prevent overflow
    if v_frame_count > 1000 then
        v_frame_count = 0
    endif
endwhile