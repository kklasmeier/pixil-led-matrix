# Animated Christmas Wreath
v_center_x = 32
v_center_y = 32

def draw_base {
    # Draw the main wreath circles (layered green circles for depth)
    draw_circle(32, 32, 20, green, true)
    draw_circle(32, 32, 16, green, true)
    draw_circle(32, 32, 12, black, true)

    # Add texture with smaller green circles
    for v_angle in (0, 360, 30)
        v_rad = v_angle * pi / 180
        v_x = 32 + round(18 * cos(v_rad))
        v_y = 32 + round(18 * sin(v_rad))
        draw_circle(v_x, v_y, 4, green, true)
    endfor v_angle
}

def draw_berries {
    # Add red berries around the wreath with random twinkling
    for v_angle in (0, 360, 45)
        v_rad = v_angle * pi / 180
        v_x = 32 + round(16 * cos(v_rad))
        v_y = 32 + round(16 * sin(v_rad))
        
        # Random chance for berry to twinkle
        v_twinkle = random(0, 100, 0)
        if v_twinkle > 80 then
            draw_circle(v_x, v_y, 2, white, true)  # Turn on white
        else
            draw_circle(v_x, v_y, 2, red, true)  # Normal red berry
        endif
    endfor v_angle
}

def draw_bow_right {
    # Right loop of bow - fuller with more depth
    draw_line(38, 14, 42, 18, red)       # Outer edge
    draw_line(42, 18, 38, 22, red)       # Lower curve
    draw_line(38, 22, 34, 18, red)       # Inner edge
    draw_line(34, 18, 38, 14, red)       # Upper curve
    
    # Add some detail lines for texture
    draw_line(36, 16, 40, 19, red)       # Inner texture
    draw_line(36, 20, 40, 17, red)       # Cross texture
}

def draw_bow_left {
    # Left loop of bow - matching the right side
    draw_line(26, 14, 22, 18, red)       # Outer edge
    draw_line(22, 18, 26, 22, red)       # Lower curve
    draw_line(26, 22, 30, 18, red)       # Inner edge
    draw_line(30, 18, 26, 14, red)       # Upper curve
    
    # Add some detail lines for texture
    draw_line(28, 16, 24, 19, red)       # Inner texture
    draw_line(28, 20, 24, 17, red)       # Cross texture
}

def draw_bow_center {
    # Center knot - more detailed
    draw_rectangle(30, 13, 4, 4, red, true)  # Main knot
    
    # Add detail to the knot
    draw_line(29, 13, 31, 16, red)      # Left fold
    draw_line(35, 13, 33, 16, red)      # Right fold
    
    # Hanging ribbons with more natural curve
    v_offset = round(sin(v_frame * pi / 10))
    
    # Left ribbon
    draw_line(30, 17, 29, 19, red)      # Upper section
    draw_line(29, 19, 28 + v_offset, 22, red)  # Lower section
    draw_line(29, 19, 27 + v_offset, 21, red)  # Width line
    
    # Right ribbon
    draw_line(34, 17, 35, 19, red)      # Upper section
    draw_line(35, 19, 36 - v_offset, 22, red)  # Lower section
    draw_line(35, 19, 37 - v_offset, 21, red)  # Width line
}

# Main animation loop
for v_frame in (1, 100, 1)
    # Start frame buffer for smooth animation
    begin_frame
    
    # Clear the screen in the buffer
    clear()
    
    # Draw static base
    call draw_base
    
    # Animate bow by slightly moving the ribbons
    v_offset = round(sin(v_frame * pi / 10))
    
    # Draw enhanced bow with all components
    call draw_bow_left
    call draw_bow_right
    call draw_bow_center
    
    # Center knot stays steady
    draw_rectangle(30, 13, 4, 4, red, true)
    
    # Hanging ribbons sway slightly
    draw_line(30, 17, 28 + v_offset, 22, red)
    draw_line(34, 17, 36 - v_offset, 22, red)
    
    # Draw twinkling berries
    call draw_berries
    
    # Display the complete frame
    end_frame

    v_rest = random(.1, 1.5, 1)
    rest(v_rest)
endfor v_frame
