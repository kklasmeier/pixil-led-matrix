# Square animation showcase - Continuous pattern with random elements
# Set initial values
v_size = 63  # Maximum size for 64x64 panel (0-63)

while true then  # Make it run continuously
    # Randomize the delay speed (0.00 to 0.02 in 0.01 increments)
    v_delay = random(0.00, 0.02, 2)
    
    # Randomize the burnout (10000 to 50000 in 10000 increments)
    v_burnout = random(10000, 50000, 10000)
    
    # Randomize color (1-99)
    v_color = random(1, 99, 1)
    
    # Reset variables for each iteration
    v_x = 63  # Start at max X
    v_y = 0   # Start at top
    v_offset = 0  # Tracks how far in we've moved
    v_correction = 0
    v_current_size = v_size

    while v_current_size >= 3 then
        # Top edge (right to left)
        v_x = 63 - v_offset + v_correction
        v_y = v_offset
        
        while v_x >= v_offset then
            plot(v_x, v_y, {v_color}:80, v_burnout)
            v_x = v_x - 1
            rest(v_delay)            
        endwhile
        end_frame

        # Left edge (top to bottom)
        v_x = v_offset
        v_y = v_offset
        while v_y <= 63 - v_offset then
            plot(v_x, v_y, {v_color}:80, v_burnout)
            v_y = v_y + 1
            rest(v_delay)
        endwhile

        # Bottom edge (left to right)
        v_x = v_offset
        v_y = 63 - v_offset
        while v_x <= 63 - v_offset then
            plot(v_x, v_y, {v_color}:80, v_burnout)
            v_x = v_x + 1
            rest(v_delay)
        endwhile

        # Right edge (bottom to top)
        v_x = 63 - v_offset
        v_y = 63 - v_offset
        while v_y >= v_offset + 3 then
            plot(v_x, v_y, {v_color}:80, v_burnout)
            v_y = v_y - 1
            rest(v_delay)
        endwhile

        v_offset = v_offset + 2
        v_correction = 2
        v_current_size = v_current_size - 4
    endwhile

    # No need for the rest and clear since it will continue immediately
endwhile