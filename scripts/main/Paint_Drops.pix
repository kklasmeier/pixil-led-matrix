# Matrix Rain Pattern Lightshow
# Initialize display parameters
v_num_columns = 16    # Number of vertical streams
v_height = 64         # Display height

# Create arrays for column states
create_array(v_intensities, 2000)  # Store current intensity of each point (16x64)
create_array(v_speeds, 20)         # Store speed of each column
create_array(v_active, 20)         # Track which columns are currently active
create_array(v_colors, 20)         # Store color for each column

# Random color range for this run
v_color_start = random(1, 80, 0)
v_color_range = random(10, 30, 0)
v_color_end = v_color_start + v_color_range
if v_color_end > 99 then
    v_color_end = 99
endif

# Initialize speeds and colors
for v_i in (0, v_num_columns, 1) then
    v_speeds[v_i] = random(2, 4, 0)
    v_colors[v_i] = random(v_color_start, v_color_end, 0)
    v_active[v_i] = 0
endfor v_i

# Initialize all intensities to 0
for v_i in (0, 1024, 1) then
    v_intensities[v_i] = 0
endfor v_i

# Main animation loop
while 1 then
    # Randomly activate new columns
    for v_col in (0, v_num_columns, 1) then
        if v_active[v_col] == 0 and random(0, 100, 0) > 90 then  # 10% chance to start new stream
            v_active[v_col] = 1
            v_intensities[v_col * 64] = 99
        endif
    endfor v_col

    # Draw current state
    for v_col in (0, v_num_columns, 1) then
        v_x = v_col * 4  # Space columns evenly
        
        # Draw entire column
        for v_y in (0, v_height, 1) then
            v_idx = v_col * 64 + v_y
            v_intensity = v_intensities[v_idx]
            
            if v_intensity > 0 then
                plot(v_x, v_y, v_colors[v_col], v_intensity)
            endif
        endfor v_y
    endfor v_col

    # Update intensities - shift down
    for v_col in (0, v_num_columns, 1) then
        if v_active[v_col] == 1 then
            # Shift intensities down from bottom to top
            for v_y in (62, 0, -1) then
                v_idx = v_col * 64 + v_y
                v_next_idx = v_idx + 1
                
                # Fade as we transfer down
                v_intensities[v_next_idx] = v_intensities[v_idx] * 0.95  # Faster fade
                
                # If intensity gets too low, mark column as inactive using compound condition
                if v_intensities[v_next_idx] < 5 and v_y == 0 then
                    v_intensities[v_next_idx] = 0
                    v_active[v_col] = 0
                endif
            endfor v_y
            
            # Add new intensity at top randomly
            if random(0, 100, 0) > 70 then  # More frequent new drops
                v_intensities[v_col * 64] = 99
            else
                v_intensities[v_col * 64] = 0
            endif
        endif
    endfor v_col
endwhile