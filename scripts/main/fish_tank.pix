throttle(.5)

# Fish Tank Animation
draw_rectangle(0, 0, 64, 64, azure, 10, true)

# Define fish sprite
define_sprite(fish1, 8, 4)
    draw_polygon(5, 2, 3, 3, orange, 100, 0, true)
    draw_polygon(1, 2, 2, 3, orange, 100, 180, true)
    plot(6, 2, black, 100)
endsprite

# Define fish2 sprite
define_sprite(fish2, 9, 5)
    draw_polygon(6, 2, 4, 3, blue, 80, 0, true)
    draw_polygon(1, 2, 2, 3, blue, 80, 180, true)
    plot(7, 2, black, 100)
endsprite

# Define bubble sprite
define_sprite(bubble, 3, 3)
    draw_circle(1, 1, 1, cyan, 50, false)
endsprite

# Create plant base
for v_i in (0, 3, 1) then
    v_x = 10 + v_i * 15
    draw_line(v_x, 60, v_x, 50, forest_green, 100)
    draw_circle(v_x + 2, 52, 3, forest_green, 80, true)
    draw_circle(v_x - 2, 48, 3, forest_green, 80, true)
    draw_circle(v_x + 1, 45, 2, forest_green, 80, true)
endfor v_i

# Draw sand at bottom
draw_rectangle(0, 60, 64, 4, tan, 70, true)

# Initialize fish
v_num_fish = 6
create_array(v_fish_x, v_num_fish)
create_array(v_fish_y, v_num_fish)
create_array(v_fish_dir, v_num_fish)
create_array(v_fish_speed, v_num_fish)
create_array(v_fish_type, v_num_fish)

# Place fish
for v_i in (0, v_num_fish - 1, 1) then
    v_fish_x[v_i] = random(5, 55, 0)
    v_fish_y[v_i] = random(10, 45, 0)
    v_fish_dir[v_i] = random(0, 1, 0)
    if v_fish_dir[v_i] == 0 then
        v_fish_dir[v_i] = -1
    endif
    v_fish_speed[v_i] = random(0.5, 1.5, 1)
    v_fish_type[v_i] = random(0, 1, 0)
    
    if v_fish_type[v_i] == 0 then
        if v_fish_dir[v_i] > 0 then
            show_sprite(fish1, v_fish_x[v_i], v_fish_y[v_i], v_i)
        else
            show_sprite(fish1, v_fish_x[v_i], v_fish_y[v_i], v_i)
        endif
    else
        if v_fish_dir[v_i] > 0 then
            show_sprite(fish2, v_fish_x[v_i], v_fish_y[v_i], v_i)
        else
            show_sprite(fish2, v_fish_x[v_i], v_fish_y[v_i], v_i)
        endif
    endif
endfor v_i

# Create bubbles
v_num_bubbles = 5
create_array(v_bubble_x, v_num_bubbles)
create_array(v_bubble_y, v_num_bubbles)
create_array(v_bubble_speed, v_num_bubbles)
create_array(v_bubble_active, v_num_bubbles)

for v_i in (0, v_num_bubbles - 1, 1) then
    v_bubble_x[v_i] = random(5, 58, 0)
    v_bubble_y[v_i] = random(58, 62, 0)
    v_bubble_speed[v_i] = random(0.3, 0.7, 1)
    v_bubble_active[v_i] = 0
endfor v_i

# Main animation loop
v_time = 0
while v_time < 1000 then
    v_time = v_time + 1
    begin_frame(true)
    # Move fish
    for v_i in (0, v_num_fish - 1, 1) then
        v_fish_x[v_i] = v_fish_x[v_i] + v_fish_speed[v_i] * v_fish_dir[v_i]
        
        # Fish swimming with slight up/down motion
        v_fish_y[v_i] = v_fish_y[v_i] + sin(v_time * 0.2) * 0.1
        
        # Reverse direction if fish hits edge
        if v_fish_x[v_i] < 0 or v_fish_x[v_i] > 60 then
            v_fish_dir[v_i] = v_fish_dir[v_i] * -1
            
            # Hide fish and show in new direction
            if v_fish_type[v_i] == 0 then
                hide_sprite(fish1, v_i)
                if v_fish_dir[v_i] > 0 then
                    show_sprite(fish1, v_fish_x[v_i], v_fish_y[v_i], v_i)
                else
                    show_sprite(fish1, v_fish_x[v_i], v_fish_y[v_i], v_i)
                endif
            else
                hide_sprite(fish2, v_i)
                if v_fish_dir[v_i] > 0 then
                    show_sprite(fish2, v_fish_x[v_i], v_fish_y[v_i], v_i)
                else
                    show_sprite(fish2, v_fish_x[v_i], v_fish_y[v_i], v_i)
                endif
            endif
        endif
        
        # Update fish positions
        if v_fish_type[v_i] == 0 then
            move_sprite(fish1, v_fish_x[v_i], v_fish_y[v_i], v_i)
        else
            move_sprite(fish2, v_fish_x[v_i], v_fish_y[v_i], v_i)
        endif
    endfor v_i

    # Handle bubbles
    for v_i in (0, v_num_bubbles - 1, 1) then
        # Randomly create new bubbles
        if v_bubble_active[v_i] == 0 and random(0, 100, 0) < 2 then
            v_bubble_x[v_i] = random(5, 58, 0)
            v_bubble_y[v_i] = 58
            v_bubble_active[v_i] = 1
            show_sprite(bubble, v_bubble_x[v_i], v_bubble_y[v_i], v_i + 100)
        endif
        
        # Move active bubbles upward
        if v_bubble_active[v_i] == 1 then
            v_bubble_y[v_i] = v_bubble_y[v_i] - v_bubble_speed[v_i]
            move_sprite(bubble, v_bubble_x[v_i], v_bubble_y[v_i], v_i + 100)
            
            # Add slight side-to-side motion
            if v_time % 5 == 0 then
                v_bubble_x[v_i] = v_bubble_x[v_i] + random(-1, 1, 0)
                move_sprite(bubble, v_bubble_x[v_i], v_bubble_y[v_i], v_i + 100)
            endif
            
            # Remove bubbles that reach the top
            if v_bubble_y[v_i] < 5 then
                hide_sprite(bubble, v_i + 100)
                v_bubble_active[v_i] = 0
            endif
        endif
    endfor v_i
    end_frame    
    rest(0.03)
endwhile