# Multi-plot Burnout Test Script
# Tests burnout functionality with mplot commands

print("Starting mplot burnout test...")
clear()
print("1")
# Test 1: Simple burnout test
print("Test 1: Simple burnouts (1-3 seconds)")
mplot(10, 10, red, 100, 1000)    # Burns out after 1 second
mplot(20, 10, blue, 100, 2000)   # Burns out after 2 seconds  
mplot(30, 10, green, 100, 3000)  # Burns out after 3 seconds
mflush()
print("1")

print("Watch pixels disappear: red(1s), blue(2s), green(3s)")
rest(4)  # Wait to see all burnouts complete

# Test 2: Mixed burnouts and permanent pixels
print("Test 2: Mixed burnouts and permanent")
mplot(10, 20, yellow, 100, 1500)  # Burns out after 1.5 seconds
mplot(20, 20, orange, 100)        # Permanent (no burnout)
mplot(30, 20, purple, 100, 2500)  # Burns out after 2.5 seconds
mflush()
print("1")

print("Yellow disappears at 1.5s, orange stays, purple disappears at 2.5s")
rest(3)
print("1")

# Test 3: Staggered burnout times
print("Test 3: Staggered burnouts (0.5s intervals)")
v_base_x = 10
v_base_y = 30
for v_i in (0, 9, 1)
    v_burnout_time = (v_i + 1) * 500  # 500ms, 1000ms, 1500ms, etc.
    mplot(v_base_x + v_i * 5, v_base_y, v_i * 10, 100, v_burnout_time)
endfor v_i
mflush()
print("1")

print("Watch pixels disappear in sequence every 0.5 seconds")
rest(6)  # Wait for all to burn out
print("1")

# Test 4: Large batch with burnouts
print("Test 4: Large batch with mixed burnouts")
v_start_x = 5
v_start_y = 40
for v_row in (0, 7, 1)
    for v_col in (0, 7, 1)
        v_plot_x = v_start_x + v_col * 7
        v_plot_y = v_start_y + v_row * 2
        v_color_id = (v_row + v_col) % 100  # Simple color variation
        
        # Every other pixel gets a burnout
        if (v_row + v_col) % 2 == 0
            v_burnout = (v_row + v_col + 1) * 400  # Variable burnout times
            print(f"v_burnout {v_burnout}")
            sync_queue
            mplot(v_plot_x, v_plot_y, v_color_id, 100, v_burnout)
        else
            mplot(v_plot_x, v_plot_y, v_color_id, 100)  # Permanent
        endif
    endfor v_col
endfor v_row
mflush()

print("1")
print("8x8 grid: half permanent, half with variable burnouts")
rest(5)

# Test 5: Rapid burnouts
print("Test 5: Rapid burnouts (100-1000ms)")
v_x = 15
for v_i in (0, 9, 1)
    v_quick_burnout = (v_i + 1) * 100  # 100ms to 1000ms
    mplot(v_x + v_i * 4, 55, red, 100, v_quick_burnout)
endfor v_i
mflush()
print("1")

print("Quick sequence burnouts")
rest(2)

# Test 6: No burnouts batch (performance comparison)
print("Test 6: No burnouts (should be faster)")
for v_y in (58, 62, 1)
    for v_x in (10, 50, 1)
        mplot(v_x, v_y, blue, 100)  # No burnout parameter
    endfor v_x
endfor v_y
mflush()

print("Blue line should stay permanent")
rest(2)

print("Burnout test completed!")
sync_queue
clear()