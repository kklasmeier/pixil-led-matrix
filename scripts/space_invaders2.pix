# Space Invaders Clone
clear()

# Define player ship sprite
define_sprite(player, 8, 4)
    draw_line(3, 0, 3, 2, green, 100)
    draw_line(4, 0, 4, 2, green, 100)
    draw_rectangle(1, 3, 6, 1, green, 100, true)
endsprite

# Define invader sprite
define_sprite(invader, 5, 4)
    draw_rectangle(0, 0, 5, 1, red, 100, true)
    draw_rectangle(1, 1, 3, 1, red, 100, true)
    plot(0, 2, red, 100)
    plot(2, 2, red, 100)
    plot(4, 2, red, 100)
    plot(1, 3, red, 100)
    plot(3, 3, red, 100)
endsprite

# Define projectile sprite
define_sprite(bullet, 1, 3)
    plot(0, 0, yellow, 100)
    plot(0, 1, yellow, 100)
    plot(0, 2, yellow, 100)
endsprite

# Game initialization
v_player_x = 32
v_player_y = 60
v_move_timer = 0
v_move_direction = 1
v_rows = 3
v_cols = 8
v_invader_spacing = 7

# Create invader array positions
create_array(v_invader_x, v_rows * v_cols)
create_array(v_invader_y, v_rows * v_cols)
create_array(v_invader_alive, v_rows * v_cols)

# Initialize invaders
for v_row in (0, v_rows - 1, 1) then
    for v_col in (0, v_cols - 1, 1) then
        v_index = v_row * v_cols + v_col
        v_invader_x[v_index] = 5 + v_col * v_invader_spacing
        v_invader_y[v_index] = 5 + v_row * 6
        v_invader_alive[v_index] = 1
        show_sprite(invader, v_invader_x[v_index], v_invader_y[v_index], v_index)
    endfor v_col
endfor v_row

# Show player
show_sprite(player, v_player_x, v_player_y, 0)

# Main game loop
v_game_over = 0
while v_game_over == 0 then
    # Move invaders
    v_move_timer = v_move_timer + 1
    if v_move_timer >= 10 then
        v_move_timer = 0
        
        # Move all invaders
        for v_i in (0, v_rows * v_cols - 1, 1) then
            if v_invader_alive[v_i] == 1 then
                v_invader_x[v_i] = v_invader_x[v_i] + v_move_direction
                move_sprite(invader, v_invader_x[v_i], v_invader_y[v_i], v_i)
            endif
        endfor v_i
        
        # Check boundaries and reverse direction if needed
        v_edge_reached = 0
        for v_i in (0, v_rows * v_cols - 1, 1) then
            if v_invader_alive[v_i] == 1 then
                if v_invader_x[v_i] <= 0 or v_invader_x[v_i] >= 59 then
                    v_edge_reached = 1
                endif
            endif
        endfor v_i
        
        if v_edge_reached == 1 then
            v_move_direction = v_move_direction * -1
            # Move invaders down
            for v_i in (0, v_rows * v_cols - 1, 1) then
                if v_invader_alive[v_i] == 1 then
                    v_invader_y[v_i] = v_invader_y[v_i] + 2
                    move_sprite(invader, v_invader_x[v_i], v_invader_y[v_i], v_i)
                endif
            endfor v_i
        endif
    endif
    
    rest(0.1)
endwhile