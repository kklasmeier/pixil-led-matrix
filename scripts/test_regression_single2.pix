# Cosmic Orbit Display
# A mesmerizing animation with rotating ellipses and orbiting sprites

# Initialize variables
v_center_x = 32    # Center of the matrix (assuming 64x64)
v_center_y = 32
v_orbit_speed = 0.05  # Speed of orbit animation (seconds)
v_angle = 0        # Starting angle for rotation
v_color_red = "red"
v_color_blue = "blue"
v_color_green = "green"
v_color_yellow = "yellow"

# Step 1: Pulsing background ellipse
print("Step 1: Pulsing background ellipse")
for v_pulse in (50, 100, 10)  # Intensity from 50 to 100, step 10
    draw_ellipse(v_center_x, v_center_y, 20, 10, v_color_blue, v_pulse, false, 0, 2000)
    sync_queue
    rest(v_orbit_speed * 2)
endfor v_pulse
sync_queue

# Step 2: Define orbiting sprite with ellipse
print("Step 2: Defining orbiting satellite sprite")
define_sprite(satellite, 10, 10)
    draw_ellipse(5, 5, 4, 2, v_color_red, 100, true, 45)
endsprite

# Step 3: Orbiting satellites with elliptical paths
print("Step 3: Two satellites orbiting in elliptical paths")
v_orbit_radius_x = 25  # Horizontal radius of orbit
v_orbit_radius_y = 15  # Vertical radius of orbit
for v_angle in (0, 360, 15)  # Full circle, 15-degree steps
    # Calculate positions using sine and cosine (approximated via math functions)
    v_x1 = v_center_x + v_orbit_radius_x * cos(v_angle)
    v_y1 = v_center_y + v_orbit_radius_y * sin(v_angle)
    v_x2 = v_center_x - v_orbit_radius_x * cos(v_angle)  # Opposite direction
    v_y2 = v_center_y - v_orbit_radius_y * sin(v_angle)

    # Show two satellites
    show_sprite(satellite, v_x1, v_y1)
    show_sprite(satellite, v_x2, v_y2)
    sync_queue
    rest(v_orbit_speed)
    hide_sprite(satellite)  # Hide both instances
    hide_sprite(satellite)
    sync_queue
endfor v_angle

# Step 4: Rotating filled ellipse in frame buffer
print("Step 4: Rotating yellow filled ellipse")
begin_frame
    for v_rotate in (0, 360, 30)  # Rotate 360 degrees, 30-degree steps
        draw_ellipse(v_center_x, v_center_y, 15, 8, v_color_yellow, 100, true, v_rotate, 3000)
        sync_queue
        rest(v_orbit_speed * 3)
    endfor v_rotate
end_frame
sync_queue

# Step 5: Grand finale - expanding elliptical ring
print("Step 5: Expanding green elliptical ring")
for v_size in (5, 30, 5)  # Expand from radius 5 to 30
    draw_ellipse(v_center_x, v_center_y, v_size, v_size / 2, v_color_green, 100, false, v_angle, 1000)
    v_angle = v_angle + 30  # Rotate as it expands
    sync_queue
    rest(v_orbit_speed * 2)
endfor v_size
sync_queue

print("Cosmic Orbit complete")
rest(2)