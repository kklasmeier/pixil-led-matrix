# Text Rendering Frame Awareness Test Script

# 1. Initialize
clear()
rest(1)

# 2. Basic text rendering (no frames)
print("Testing basic text rendering without frames")
draw_text(5, 5, "No frame", piboto-regular, 10, cyan, 100)
rest(2)
clear()
sync_queue

# 3. Test text with each effect (no frames)
print("Testing text effects without frames")

# Normal
draw_text(5, 5, "Normal", piboto-regular, 10, white, 100, NORMAL)
rest(2)
sync_queue

# Type
draw_text(5, 15, "Type", piboto-regular, 10, yellow, 100, TYPE, MEDIUM)
rest(2)
sync_queue

# Scan
draw_text(5, 25, "Scan", piboto-regular, 10, green, 100, SCAN)
rest(2)
sync_queue

# Slide
draw_text(5, 35, "Slide", piboto-regular, 10, blue, 100, SLIDE, LEFT)
rest(2)
sync_queue

# Dissolve
draw_text(5, 45, "Dissolve", piboto-regular, 10, magenta, 100, DISSOLVE, IN)
rest(2)
sync_queue

# Wipe
draw_text(5, 55, "Wipe", piboto-regular, 10, red, 100, WIPE, IN_LEFT)
rest(3)
clear()
sync_queue

# 4. Test non-preserved frames with text (should override to NORMAL)
print("Testing non-preserved frames with text (should override to NORMAL)")

# Draw a background
draw_rectangle(0, 0, 64, 64, blue, 20, true)
rest(1)
sync_queue

# Begin non-preserved frame
begin_frame(false)
draw_circle(32, 32, 20, red, 100, false)
draw_polygon(32, 32, 15, 6, yellow, 100, 0, false)

# Draw text with different effects - all should render normally without clearing the frame
draw_text(10, 10, "Normal", piboto-regular, 10, white, 100, NORMAL)
draw_text(10, 20, "Type", piboto-regular, 10, white, 100, TYPE, MEDIUM)
draw_text(10, 30, "Slide", piboto-regular, 10, white, 100, SLIDE, LEFT)
draw_text(10, 40, "Dissolve", piboto-regular, 10, white, 100, DISSOLVE, IN)
draw_text(10, 50, "Wipe", piboto-regular, 10, white, 100, WIPE, IN_LEFT)

# End frame
end_frame()

print("All text should render normally in a non-preserved frame")
rest(5)
clear()
sync_queue

# 5. Test preserved frames with text effects (should work with effects)
print("Testing preserved frames with text effects (effects should work)")

# Draw a background
draw_rectangle(0, 0, 64, 64, purple, 20, true)
rest(1)

# Begin preserved frame
begin_frame(true)
draw_circle(32, 32, 20, green, 100, false)

# Test NORMAL effect
draw_text(10, 10, "Normal", piboto-regular, 8, white, 100, NORMAL)
rest(1)

# Test TYPE effect in preserved frame
draw_text(10, 20, "Type", piboto-regular, 8, white, 100, TYPE, MEDIUM)
rest(1)

# Test SLIDE effect in preserved frame
draw_text(10, 30, "Slide", piboto-regular, 8, white, 100, SLIDE, LEFT)
rest(1)

# Test DISSOLVE effect in preserved frame
draw_text(10, 40, "Dissolve", piboto-regular, 8, white, 100, DISSOLVE, IN)
rest(1)

# Test WIPE effect in preserved frame
draw_text(10, 50, "Wipe", piboto-regular, 8, white, 100, WIPE, IN_LEFT)

# End frame
end_frame()

print("All text effects should work in a preserved frame")
rest(5)
clear()

# 6. Test clear_text functionality in frames
print("Testing clear_text functionality in frames")

# Draw background
draw_rectangle(0, 0, 64, 64, cyan, 30, true)
rest(1)

# Draw initial text
draw_text(5, 20, "Clear me!", piboto-regular, 12, white, 100)
rest(2)

# Test clear_text outside frames
clear_text(5, 20)
rest(1)

# Draw new text
draw_text(5, 20, "Test 1 OK", piboto-regular, 12, yellow, 100)
rest(2)

# Test in non-preserved frame
begin_frame(false)
draw_circle(32, 32, 15, red, 100, false)
draw_text(5, 40, "Clear me too!", piboto-regular, 12, white, 100)
end_frame()
rest(2)

# Clear in non-preserved frame
begin_frame(false)
draw_circle(32, 32, 15, red, 100, false)
clear_text(5, 40)
draw_text(5, 40, "Test 2 OK", piboto-regular, 12, green, 100)
end_frame()
rest(2)

# Test in preserved frame
begin_frame(true)
draw_text(5, 60, "And me!", piboto-regular, 12, white, 100)
end_frame()
rest(2)

# Clear in preserved frame
begin_frame(true)
clear_text(5, 60)
draw_text(5, 60, "Test 3 OK", piboto-regular, 12, magenta, 100)
end_frame()
rest(2)

print("Clear text tests complete")
rest(2)
clear()

# 7. Test bitmap font with frame awareness
print("Testing bitmap font with frame awareness")

# Draw background
draw_rectangle(0, 0, 64, 64, lavender, 20, true)
rest(1)

# Test bitmap font without frames
draw_text(5, 10, "BITMAP", tiny64_font, 5, white, 100)
rest(1)

# Test bitmap font with effects
draw_text(5, 20, "TYPE", tiny64_font, 5, yellow, 100, TYPE, MEDIUM)
rest(2)

# Test in non-preserved frame
begin_frame(false)
draw_circle(32, 32, 15, blue, 100, false)
draw_text(5, 30, "NO EFFECT", tiny64_font, 5, white, 100, TYPE, MEDIUM)
end_frame()
rest(2)

# Test in preserved frame
begin_frame(true)
draw_text(5, 40, "WITH EFFECT", tiny64_font, 5, green, 100, TYPE, MEDIUM)
end_frame()
rest(2)

print("Bitmap font tests complete")
rest(2)
clear()

# 8. Test nested frames with text (complex case)
print("Testing nested frame-like scenarios")

# Draw background
draw_rectangle(0, 0, 64, 64, dark_gray, 40, true)
rest(1)

# Start outer frame (preserved)
begin_frame(true)
draw_circle(20, 20, 15, red, 100, false)

# Draw text in preserved frame
draw_text(5, 40, "Text 1", piboto-regular, 10, white, 100, SLIDE, LEFT)
rest(2)

# Draw more objects
draw_circle(40, 40, 10, yellow, 100, false)

# Draw more text
draw_text(5, 50, "Text 2", piboto-regular, 10, white, 100, DISSOLVE, IN)
rest(2)

# End outer frame
end_frame()
rest(2)

print("Nested frame tests complete")
rest(1)
clear()

# Final message
draw_text(5, 20, "All tests", piboto-regular, 10, green, 100)
draw_text(5, 32, "complete!", piboto-regular, 10, green, 100)
rest(3)
clear()