# Initialize variables
v_running = 1
v_center_x = 32
v_center_y = 32

# Color array
create_array(v_colors, 8, string)
v_colors[0] = "red"
v_colors[1] = "orange"
v_colors[2] = "yellow"
v_colors[3] = "green"
v_colors[4] = "cyan"
v_colors[5] = "blue"
v_colors[6] = "purple"
v_colors[7] = "magenta"

# Procedure to draw a single ripple with random attributes
def draw_ripple {
    v_shape = random(0, 4, 0)         # 0: circle, 1: square, 2: triangle, 3: pentagram, 4: hexagon
    v_speed = random(1, 3, 0)         # Step size for expansion
    v_max_size = random(20, 35, 0)    # Maximum ripple size
    v_color_mode = random(0, 1, 0)    # 0: solid color, 1: rainbow
    v_base_color = random(0, 7, 0)    # Index for solid color
    v_intensity = random(50, 100, 0)  # Random intensity (higher base for visibility)
    
    # Expansion loop
    for v_size in (5, v_max_size, v_speed)
        v_current_intensity = v_intensity - (v_size * 2)  # Fade as it expands
        if v_current_intensity < 20 then
            v_current_intensity = 20
        endif
        
        # Rainbow mode: cycle colors; Solid mode: use base color
        if v_color_mode == 1 then
            v_color_idx = (v_size / 5) % 8
        else
            v_color_idx = v_base_color
        endif
        
        # Draw based on shape with short duration for smooth overlap
        if v_shape == 0 then
            draw_circle(v_center_x, v_center_y, v_size, v_colors[v_color_idx], v_current_intensity, false, 100)
        elseif v_shape == 1 then
            draw_rectangle(v_center_x - v_size, v_center_y - v_size, v_size * 2, v_size * 2, v_colors[v_color_idx], v_current_intensity, false, 100)
        elseif v_shape == 2 then
            draw_polygon(v_center_x, v_center_y, v_size, 3, v_colors[v_color_idx], v_current_intensity, 0, false, 100)
        elseif v_shape == 3 then
            draw_polygon(v_center_x, v_center_y, v_size, 5, v_colors[v_color_idx], v_current_intensity, 0, false, 100)
        else
            draw_polygon(v_center_x, v_center_y, v_size, 6, v_colors[v_color_idx], v_current_intensity, 0, false, 3000)
        endif
        
        # Short rest for smooth ripple effect
        rest(0.03)
    endfor v_size
}

# Main infinite loop
throttle(0.5)  # Faster execution for continuous ripples
while v_running == 1 then
    call draw_ripple
    rest(0.1)  # Brief pause between ripples
endwhile