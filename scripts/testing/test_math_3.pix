# Math Functions Demonstration Script
# Tests and demonstrates various math functions with visual output

# Basic setup
v_center_x = 32
v_center_y = 32
v_wait = 2  # Time to show each demonstration

def draw_coordinate_system {
    draw_line(0, 32, 63, 32, blue)   # X axis
    draw_line(32, 0, 32, 63, blue)   # Y axis
}

print("==================================================")
print("Test 1: Sine and Cosine Wave")
for v_angle in (0, 360, 10)
    begin_frame
    clear()
    call draw_coordinate_system
    
    # Draw sine wave (red)
    for v_x in (0, 63, 2)
        v_rad = v_x * pi / 32
        v_sin = sin(v_rad)
        v_y = 32 + round(v_sin * 20)
        plot(v_x, v_y, red)
    endfor v_x
    
    # Draw cosine wave (green)
    for v_x in (0, 63, 2)
        v_rad = v_x * pi / 32
        v_cos = cos(v_rad)
        v_y = 32 + round(v_cos * 20)
        plot(v_x, v_y, green)
    endfor v_x
    
    end_frame
    rest(.01)
endfor v_angle

rest(3)
print("==================================================")
print("Test 2: Arc Functions - Drawing a rotating vector")
for v_frame in (0, 90, 1)
    begin_frame
    clear()
    call draw_coordinate_system
    
    # Calculate vector coordinates
    v_rad = v_frame * pi / 45
    v_cos = cos(v_rad)
    v_sin = sin(v_rad)
    v_x = round(v_cos * 20)
    v_y = round(v_sin * 20)
    
    # Calculate end points
    v_end_x = 32 + v_x
    v_end_y = 32 + v_y
    
    # Draw vector
    draw_line(32, 32, v_end_x, v_end_y, red)
    
    # Calculate angle
    v_angle = atan2(v_y, v_x)
    v_degrees = degrees(v_angle)
    
    # Show angle by drawing an arc
    for v_t in (0, round(v_degrees), 2)
        v_rad_t = radians(v_t)
        v_arc_cos = cos(v_rad_t)
        v_arc_sin = sin(v_rad_t)
        v_arc_x = 32 + round(v_arc_cos * 10)
        v_arc_y = 32 + round(v_arc_sin * 10)
        plot(v_arc_x, v_arc_y, yellow)
    endfor v_t
    
    end_frame
    rest(0.05)
endfor v_frame

rest(3)
print("==================================================")
print("Test 3: Exponential and Log Functions")
for v_x in (1, 32, 1)
    begin_frame
    clear()
    call draw_coordinate_system
    
    # Calculate exp curve
    v_scale = 10
    v_exp = exp(v_x/v_scale)
    v_exp_y = 63 - round(v_exp * 5)
    v_plot_x = v_x * 2
    
    # Ensure y is in bounds
    v_bounded_y = max(0, min(63, v_exp_y))
    plot(v_plot_x, v_bounded_y, red)
    
    # Calculate log curve
    v_log = log(v_x + 1)
    v_log_y = 63 - round(v_log * 15)
    v_bounded_log_y = max(0, min(63, v_log_y))
    plot(v_plot_x, v_bounded_log_y, green)
    
    end_frame
    rest(0.1)
endfor v_x

rest(3)
print("==================================================")
print("Test 4: Square Root and Power Functions")
for v_x in (0, 32, 1)
    begin_frame
    clear()
    call draw_coordinate_system
    
    # Calculate sqrt curve
    v_sqrt = sqrt(v_x)
    v_sqrt_y = 63 - round(v_sqrt * 8)
    v_plot_x = v_x * 2
    plot(v_plot_x, v_sqrt_y, red)
    
    # Calculate power curve
    v_pow = pow(v_x/4, 2)
    v_pow_y = 63 - round(v_pow)
    v_bounded_pow_y = max(0, v_pow_y)
    plot(v_plot_x, v_bounded_pow_y, green)
    
    end_frame
    rest(0.1)
endfor v_x

rest(3)
print("==================================================")
print("Test 5: Min/Max and Rounding Functions")
for v_frame in (0, 360, 5)
    begin_frame
    clear()
    
    v_rad = v_frame * pi / 180
    v_raw = sin(v_rad) * 20
    v_plot_x = v_frame/6
    
    # Draw center line
    draw_line(0, 32, 63, 32, blue)
    
    # Calculate different rounding values
    v_y = 32 + round(v_raw)
    v_y_floor = 32 + floor(v_raw)
    v_y_ceil = 32 + ceil(v_raw)
    v_y_trunc = 32 + trunc(v_raw)
    
    # Plot all points
    plot(v_plot_x, v_y, white)
    plot(v_plot_x, v_y_floor, red)
    plot(v_plot_x, v_y_ceil, green)
    plot(v_plot_x, v_y_trunc, yellow)
    
    end_frame
    rest(0.05)
endfor v_frame

rest(3)
print("==================================================")
print("Math function demonstrations completed")
rest(1)
