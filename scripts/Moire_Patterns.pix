# Initialize variables for grid control
v_size = 64
v_spacing = 8
v_angle = 0
v_speed = 0.1
v_lines = 9
v_intensity = 50    # Base intensity for color effects
v_phase = 0         # Phase for color cycling


# Create arrays for line coordinates
create_array(v_startx, v_lines)
create_array(v_starty, v_lines)
create_array(v_endx, v_lines)
create_array(v_endy, v_lines)

# Main animation loop
while 1 then
    v_angle = v_angle + v_speed
    v_phase = v_phase + 0.05
    
    # Calculate color intensities
    v_int1 = 50 + 49 * sin(v_phase)          # Pulsing intensity for grid 1
    # To get 20-80 range:
    # Center point: (80 + 20)/2 = 50
    # Amplitude: (80 - 20)/2 = 30
    v_int2 = 50 + 30 * sin(v_phase + pi/2)   # Pulsing intensity from 20 to 80
    
    begin_frame
    
    # Draw first grid with pulsing blue
    v_i = 0
    while v_i < v_lines then
        v_pos = v_i * v_spacing
        draw_line(0, v_pos, 64, v_pos, blue:{v_int1})
        draw_line(v_pos, 0, v_pos, 64, blue:{v_int1})
        v_i = v_i + 1
    endwhile
    
    # Draw second grid with pulsing cyan
    v_i = 0
    while v_i < v_lines then
        v_offset = v_i * v_spacing - 32
        
        # Same rotation calculations...
        v_startx[v_i] = 32 + (-33) * cos(v_angle) - v_offset * sin(v_angle)
        v_starty[v_i] = 32 + (-33) * sin(v_angle) + v_offset * cos(v_angle)
        v_endx[v_i] = 32 + 33 * cos(v_angle) - v_offset * sin(v_angle)
        v_endy[v_i] = 32 + 33 * sin(v_angle) + v_offset * cos(v_angle)
        
        draw_line(v_startx[v_i], v_starty[v_i], v_endx[v_i], v_endy[v_i], cyan:{v_int2})
        
        v_px1 = 32 + v_offset * cos(v_angle)
        v_py1 = 32 + v_offset * sin(v_angle)
        v_px2 = 32 + v_offset * cos(v_angle)
        v_py2 = 32 + v_offset * sin(v_angle)
        draw_line(v_px1 - 33 * sin(v_angle), v_py1 + 33 * cos(v_angle),                 v_px2 + 33 * sin(v_angle), v_py2 - 33 * cos(v_angle), cyan:{v_int2})
        
        v_i = v_i + 1
    endwhile
    
    end_frame
    rest(0.05)
endwhile